name: KRX Daily Data Collector

on:
  schedule:
    # 매일 18:10 KST == 09:10 UTC (월~금)
    - cron: "10 9 * * 1-5"
  workflow_dispatch:
    inputs:
      run_on_holiday:
        description: "휴장일에도 마지막 영업일 데이터로 실행"
        type: boolean
        default: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      RUN_ON_HOLIDAY: ${{ inputs.run_on_holiday || 'true' }}
      PYTHONUNBUFFERED: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect / Update KRX data
        run: |
          python -m src.update_stock_data --run-on-holiday "${RUN_ON_HOLIDAY}"

      - name: Build machine JSON (docs/api/index.json)
        run: |
          python - <<'PY'
          import json, os, glob
          from pathlib import Path
          from datetime import datetime, timezone, timedelta
          import pandas as pd
          KST = timezone(timedelta(hours=9))
          data_dir = Path("data")
          out_path = Path("docs/api/index.json")
          out_path.parent.mkdir(parents=True, exist_ok=True)

          payload = {
              "version": 1,
              "generated_at": datetime.now(tz=KST).strftime("%Y-%m-%dT%H:%M:%S%z"),
              "timezone": "Asia/Seoul",
              "items": []
          }

          for csv_file in sorted(glob.glob(str(data_dir / "*_stock_data.csv"))):
              name = Path(csv_file).name.replace("_stock_data.csv","")
              try:
                  df = pd.read_csv(csv_file, encoding="utf-8-sig")
              except Exception:
                  df = pd.read_csv(csv_file)  # fallback
              item = {
                  "name": name,
                  "ticker": "",
                  "columns": [str(c) for c in df.columns],
                  "rows": df.astype(str).values.tolist(),
                  "row_count": int(len(df)),
              }
              payload["items"].append(item)

          out_path.write_text(json.dumps(payload, ensure_ascii=False, separators=(",", ":")), encoding="utf-8")
          print(f"Wrote {out_path} with {len(payload['items'])} items")
          PY
      - name: Commit & Push changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore(data): KRX daily update ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"
            git push
          else
            echo "No changes to commit."
          fi
